<?xml version="1.0"?>
<doc>
    <assembly>
        <name>eFMS.API.System</name>
    </assembly>
    <members>
        <member name="T:eFMS.API.System.Controllers.CatAreaController">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatAreaController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.System.DL.Common.LanguageSub},eFMS.API.System.DL.IService.ICatAreaService)">
            <summary>
            constructor
            </summary>
            <param name="localizer">inject interface IStringLocalizer</param>
            <param name="service">inject interface ICatAreaService</param>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatAreaController.Get">
            <summary>
            get the list of areas
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatAreaController.GetByLanguage">
            <summary>
            get the list of areas by culture current language
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeController.Get(eFMS.API.System.DL.Models.Criteria.CatChargeCriteria,System.Int32,System.Int32)">
            <summary>
            get and paging the list of charges by conditions
            </summary>
            <param name="criteria">search conditions</param>
            <param name="pageNumber">page to retrieve data</param>
            <param name="pageSize">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeController.Get(eFMS.API.System.DL.Models.Criteria.CatChargeCriteria)">
            <summary>
            get the list of charges by conditions
            </summary>
            <param name="criteria">search conditions</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeController.Get(System.Guid)">
            <summary>
            get charge by id
            </summary>
            <param name="id">id of data that need to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeController.All">
            <summary>
            get all charges
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeController.Add(eFMS.API.System.DL.Models.CatChargeAddOrUpdateModel)">
            <summary>
            add a new charge
            </summary>
            <param name="model">object data to add</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeController.Update(eFMS.API.System.DL.Models.CatChargeAddOrUpdateModel)">
            <summary>
            update an existed item
            </summary>
            <param name="model">object to update</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeController.Delete(System.Guid)">
            <summary>
            delete an existed item
            </summary>
            <param name="id">id of data that need to delete</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            read charge data from file excel 
            </summary>
            <param name="uploadedFile">file to read data</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeController.Import(System.Collections.Generic.List{eFMS.API.System.DL.Models.CatChargeImportModel})">
            <summary>
            import list charge into database
            </summary>
            <param name="data">list of data</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeController.DownloadExcel">
            <summary>
            download exel from server
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeDefaultAccountController.Get">
            <summary>
            get all charge default
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeDefaultAccountController.Add(eFMS.API.System.DL.Models.CatChargeDefaultAccountModel)">
            <summary>
            add new charge default
            </summary>
            <param name="model">object to add</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeDefaultAccountController.Update(eFMS.API.System.DL.Models.CatChargeDefaultAccountModel)">
            <summary>
            update an existed item
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeDefaultAccountController.Delete(System.Int32)">
            <summary>
            delete an existed item
            </summary>
            <param name="id">id of data that need to delete</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeDefaultAccountController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            read charge default data from file excel 
            </summary>
            <param name="uploadedFile">file to read data</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeDefaultAccountController.Import(System.Collections.Generic.List{eFMS.API.System.DL.Models.CatChargeDefaultAccountImportModel})">
            <summary>
            import list charge default into database
            </summary>
            <param name="data">list of data</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatChargeDefaultAccountController.DownloadExcel">
            <summary>
            download exel from server
            </summary>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.CatCommodityGroupController">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommodityGroupController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.System.DL.Common.LanguageSub},eFMS.API.System.DL.IService.ICatCommodityGroupService,AutoMapper.IMapper,eFMS.IdentityServer.DL.UserManager.ICurrentUser)">
            <summary>
            constructor
            </summary>
            <param name="localizer">inject interface IStringLocalizer</param>
            <param name="service">inject interface ICatCommodityGroupService</param>
            <param name="iMapper">inject interface IMapper</param>
            <param name="user"></param>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommodityGroupController.Get(eFMS.API.System.DL.Models.Criteria.CatCommodityGroupCriteria)">
            <summary>
            get the list of commodities by conditions
            </summary>
            <param name="criteria">search conditions</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommodityGroupController.Get(eFMS.API.System.DL.Models.Criteria.CatCommodityGroupCriteria,System.Int32,System.Int32)">
            <summary>
            get and paging the list of commodities by conditions
            </summary>
            <param name="criteria">search conditions</param>
            <param name="page">page to retrieve data</param>
            <param name="size">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommodityGroupController.GetByLanguage">
            <summary>
            get all commodities by current language
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommodityGroupController.Get(System.Int16)">
            <summary>
            get commodity by id
            </summary>
            <param name="id">id of data that need to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommodityGroupController.Post(eFMS.API.System.Models.CatCommodityGroupEditModel)">
            <summary>
            add new commodity
            </summary>
            <param name="model">object to add</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommodityGroupController.Put(System.Int16,eFMS.API.System.Models.CatCommodityGroupEditModel)">
            <summary>
            update an existed item
            </summary>
            <param name="id">id of data that need to retrieve</param>
            <param name="model">object to update</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommodityGroupController.Delete(System.Int16)">
            <summary>
            delete an existed item
            </summary>
            <param name="id">id of data that need to delete</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommodityGroupController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            read commodity group data from file excel
            </summary>
            <param name="uploadedFile">file to read data</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommodityGroupController.Import(System.Collections.Generic.List{eFMS.API.System.DL.Models.CommodityGroupImportModel})">
            <summary>
            import list commodity groups into database
            </summary>
            <param name="data">list of data</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommodityGroupController.DownloadExcel">
            <summary>
            download exel from server
            </summary>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.CatCommonityController">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommonityController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.System.DL.Common.LanguageSub},eFMS.API.System.DL.IService.ICatCommodityService,AutoMapper.IMapper)">
            <summary>
            constructor
            </summary>
            <param name="localizer">inject interface IStringLocalizer</param>
            <param name="service">inject interface ICatAreaService</param>
            <param name="iMapper">inject interface IMapper</param>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommonityController.GetAll">
            <summary>
            get all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommonityController.Get(eFMS.API.System.DL.Models.Criteria.CatCommodityCriteria)">
            <summary>
            get the list of commodities
            </summary>
            <param name="criteria">search conditions</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommonityController.Get(eFMS.API.System.DL.Models.Criteria.CatCommodityCriteria,System.Int32,System.Int32)">
            <summary>
            get and paging the list of commodities by conditions
            </summary>
            <param name="criteria">search conditions</param>
            <param name="page">page to retrieve data</param>
            <param name="size">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommonityController.Get(System.Int16)">
            <summary>
            get commodity by id
            </summary>
            <param name="id">id of data that need to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommonityController.Post(eFMS.API.System.Models.CatCommodityEditModel)">
            <summary>
            add a new commodity
            </summary>
            <param name="model">object to add</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommonityController.Put(System.Int16,eFMS.API.System.Models.CatCommodityEditModel)">
            <summary>
            update an existed item
            </summary>
            <param name="id">id of data that need to retrieve</param>
            <param name="model">object to update</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommonityController.Delete(System.Int16)">
            <summary>
            delete an existed item
            </summary>
            <param name="id">id of data that need to delete</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommonityController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            read commodities data from file excel
            </summary>
            <param name="uploadedFile">file to read data</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommonityController.Import(System.Collections.Generic.List{eFMS.API.System.DL.Models.CommodityImportModel})">
            <summary>
            import list commodities into database
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCommonityController.DownloadExcel">
            <summary>
            download exel from server
            </summary>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.CatCountryController">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.System.DL.Common.LanguageSub},eFMS.API.System.DL.IService.ICatCountryService)">
            <summary>
            constructor
            </summary>
            <param name="localizer">inject IStringLocalizer</param>
            <param name="service">inject ICatCountryService serrvice</param>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.Get(eFMS.API.System.DL.Models.Criteria.CatCountryCriteria,System.Int32,System.Int32)">
            <summary>
            get and paging the list of countries by conditions
            </summary>
            <param name="criteria">search conditions</param>
            <param name="page">page to retrieve data</param>
            <param name="size">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.Get(eFMS.API.System.DL.Models.Criteria.CatCountryCriteria)">
            <summary>
            get the list of countries
            </summary>
            <param name="criteria">search conditions</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.Get(System.Int32)">
            <summary>
            get country by id
            </summary>
            <param name="id">id of data that need to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.GetAll">
            <summary>
            get all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.Add(eFMS.API.System.DL.Models.CatCountryModel)">
            <summary>
            add new country
            </summary>
            <param name="catCountry">object to add</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.Update(eFMS.API.System.DL.Models.CatCountryModel)">
            <summary>
            update an existed country
            </summary>
            <param name="catCountry">object to update</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.Delete(System.Int16)">
            <summary>
            delete an existed country
            </summary>
            <param name="id">id of data that need to delete</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.GetByLanguage">
            <summary>
            get all countries by current language
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.DownloadExcel">
            <summary>
            download exel file from server
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.UpLoadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            read a file excel
            </summary>
            <param name="uploadedFile"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCountryController.Import(System.Collections.Generic.List{eFMS.API.System.DL.Models.CatCountryImportModel})">
            <summary>
            import list countries
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.CatCurrencyController">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.System.DL.Common.LanguageSub},eFMS.API.System.DL.IService.ICatCurrencyService)">
            <summary>
            
            </summary>
            <param name="localizer">inject interface IStringLocalizer</param>
            <param name="service">inject interface ICatCurrencyService</param>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyController.Get">
            <summary>
            get the list of all currencies
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyController.Get(System.String)">
            <summary>
            get commodity by id
            </summary>
            <param name="id">id of data that need to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyController.Get(eFMS.API.System.DL.Models.Criteria.CatCurrrencyCriteria,System.Int32,System.Int32)">
            <summary>
            get and paging the list of currencies by conditions
            </summary>
            <param name="criteria">search conditions</param>
            <param name="page">page to retrieve data</param>
            <param name="size">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyController.Get(eFMS.API.System.DL.Models.Criteria.CatCurrrencyCriteria)">
            <summary>
            get the list of currencies
            </summary>
            <param name="criteria">search conditions</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyController.Post(eFMS.API.System.DL.Models.CatCurrencyModel)">
            <summary>
            add new currency
            </summary>
            <param name="model">object to add</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyController.Put(eFMS.API.System.DL.Models.CatCurrencyModel)">
            <summary>
            update an existed item
            </summary>
            <param name="model">model to update</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyController.Delete(System.String)">
            <summary>
            delete an existed item
            </summary>
            <param name="id">id of data that want to delete</param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.CatCurrencyExchangeController">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyExchangeController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.System.DL.Common.LanguageSub},eFMS.API.System.DL.IService.ICatCurrencyExchangeService,AutoMapper.IMapper,eFMS.IdentityServer.DL.UserManager.ICurrentUser)">
            <summary>
            constructor
            </summary>
            <param name="localizer">inject interface IStringLocalizer</param>
            <param name="service">inject interface ICatCurrencyExchangeService</param>
            <param name="imapper">inject interface IMapper</param>
            <param name="user">inject interface ICurrentUser</param>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyExchangeController.GetExchangeRateHistory(eFMS.API.System.DL.Models.Criteria.CatCurrencyExchangeCriteria,System.Int32,System.Int32)">
            <summary>
            get and paging currency exchage rate
            </summary>
            <param name="criteria">search conditions</param>
            <param name="page">page to retrieve dat</param>
            <param name="size">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyExchangeController.GetCurrencies">
            <summary>
            get currnecy
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyExchangeController.GetNewest(System.String)">
            <summary>
            get newest exchage rate
            </summary>
            <param name="currencyToId"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyExchangeController.GetExchangeRates(System.DateTime,System.String,System.String)">
            <summary>
            get exchange rate by condition
            </summary>
            <param name="date"></param>
            <param name="localCurrency"></param>
            <param name="fromCurrency"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyExchangeController.Get(System.Int32)">
            <summary>
            get data by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyExchangeController.Put(eFMS.API.System.DL.Models.CatCurrencyExchangeEditModel)">
            <summary>
            update exchange rate
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyExchangeController.Put(System.Int32,eFMS.API.System.DL.Models.CatCurrencyExchangeModel)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyExchangeController.Delete(System.Int32)">
            <summary>
            delete an existed item
            </summary>
            <param name="id">id of data that need to delete</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatCurrencyExchangeController.RemoveExchangeCurrency(System.String)">
            <summary>
            remove an exchange rate
            </summary>
            <param name="currencyFrom"></param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.CatPartnerController">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.System.DL.Common.LanguageSub},eFMS.API.System.DL.IService.ICatPartnerService,AutoMapper.IMapper)">
            <summary>
            constructor
            </summary>
            <param name="localizer">inject interface IStringLocalizer</param>
            <param name="service">inject interface ICatPartnerService</param>
            <param name="iMapper">inject interface IMapper</param>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.GetAll">
            <summary>
            get all partners
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.Get(eFMS.API.System.DL.Models.Criteria.CatPartnerCriteria)">
            <summary>
            get the list of partners
            </summary>
            <param name="criteria">search conditions</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.Get(eFMS.API.System.DL.Models.Criteria.CatPartnerCriteria,System.Int32,System.Int32)">
            <summary>
            get and paging the list of commodities by partners
            </summary>
            <param name="criteria">search conditions</param>
            <param name="page">page to retrieve data</param>
            <param name="size">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.GetCustomer(eFMS.API.System.DL.Models.Criteria.CatPartnerCriteria,System.Int32,System.Int32)">
            <summary>
            et and paging the list of partners by conditions
            </summary>
            <param name="criteria">search conditions</param>
            <param name="page">page to retrieve data</param>
            <param name="size">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.Get(System.String)">
            <summary>
            get partner by id
            </summary>
            <param name="id">id of data that need to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.Post(eFMS.API.System.Models.CatPartnerEditModel)">
            <summary>
            add new partner
            </summary>
            <param name="model">object to add</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.Put(System.String,eFMS.API.System.Models.CatPartnerEditModel)">
            <summary>
            update an existed item
            </summary>
            <param name="id">id of data that need to update</param>
            <param name="model">object to update</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.Delete(System.String)">
            <summary>
            delete an existed item
            </summary>
            <param name="id">id of data that need to delete</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.GetDepartments">
            <summary>
            get department
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.Import(System.Collections.Generic.List{eFMS.API.System.DL.Models.CatPartnerImportModel})">
            <summary>
            import list partner
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.DownloadExcel">
            <summary>
            download file excel from server
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPartnerController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            read data from file excel
            </summary>
            <param name="uploadedFile"></param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.CatPlaceController">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.System.DL.Common.LanguageSub},eFMS.API.System.DL.IService.ICatPlaceService,AutoMapper.IMapper)">
            <summary>
            constructor
            </summary>
            <param name="localizer">inject interface IStringLocalizer</param>
            <param name="service">inject interface ICatPlaceService</param>
            <param name="iMapper">inject interface IMapper</param>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.Get">
            <summary>
            get all places
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.Get(eFMS.API.System.DL.Models.Criteria.CatPlaceCriteria)">
            <summary>
            get the list of all places
            </summary>
            <param name="criteria">search conditions</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.Get(eFMS.API.System.DL.Models.Criteria.CatPlaceCriteria,System.Int32,System.Int32)">
            <summary>
            get and paging the list of places by conditions
            </summary>
            <param name="criteria">search conditions</param>
            <param name="page">page to retrieve data</param>
            <param name="size">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.Get(System.Guid)">
            <summary>
            get place by id
            </summary>
            <param name="id">id to retrieve data</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.GetProvinces(System.Nullable{System.Int16})">
            <summary>
            get the list of provinces by country
            </summary>
            <param name="countryId">country id</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.GetDistricts(System.Nullable{System.Guid})">
            <summary>
            get the list of districts by province
            </summary>
            <param name="provinceId">province id</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.GetModeOfTransport">
            <summary>
            get the list of mode
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.Post(eFMS.API.System.Models.CatPlaceEditModel)">
            <summary>
            add new place
            </summary>
            <param name="model">object to add</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.Put(System.Guid,eFMS.API.System.Models.CatPlaceEditModel)">
            <summary>
            update an existed item
            </summary>
            <param name="id">id of data that want to update</param>
            <param name="model">object to update</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.Delete(System.Guid)">
            <summary>
            delete an existed item
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.DownloadExcel(eFMS.API.Common.Globals.CatPlaceTypeEnum)">
            <summary>
            download an excel file from server
            </summary>
            <param name="type">type of partner</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.UpLoadFile(Microsoft.AspNetCore.Http.IFormFile,eFMS.API.Common.Globals.CatPlaceTypeEnum)">
            <summary>
            read data from excel file
            </summary>
            <param name="uploadedFile">file upload</param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatPlaceController.Import(System.Collections.Generic.List{eFMS.API.System.DL.Models.CatPlaceImportModel})">
            <summary>
            import partner data
            </summary>
            <param name="data">data to import</param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.CatStageController">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatStageController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.System.DL.Common.LanguageSub},eFMS.API.System.DL.IService.ICatStageService,eFMS.IdentityServer.DL.UserManager.ICurrentUser,Microsoft.Extensions.Caching.Distributed.IDistributedCache)">
            <summary>
            constructor
            </summary>
            <param name="localizer">inject IStringLocalizer service</param>
            <param name="service">inject ICatStageService service</param>
            <param name="user">inject ICurrentUser service</param>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatStageController.GetAll">
            <summary>
            get all
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatStageController.Get(eFMS.API.System.DL.Models.Criteria.CatStageCriteria,System.Int32,System.Int32)">
            <summary>
            get and paging the list of stages by conditions
            </summary>
            <param name="criteria">search conditions</param>
            <param name="pageNumber">page to retrieve data</param>
            <param name="pageSize">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatStageController.Get(eFMS.API.System.DL.Models.Criteria.CatStageCriteria)">
            <summary>
            get the list of stages
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatStageController.Get(System.Int32)">
            <summary>
            get stage by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatStageController.AddStage(eFMS.API.System.DL.Models.CatStageModel)">
            <summary>
            add new stage
            </summary>
            <param name="catStageModel">object to add</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatStageController.UpdateStage(eFMS.API.System.DL.Models.CatStageModel)">
            <summary>
            update an existed item
            </summary>
            <param name="catStageModel">object to update</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatStageController.DeleteStage(System.Int32)">
            <summary>
            delete an existed item
            </summary>
            <param name="id">id of item that want to delete</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatStageController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            read data of file excel
            </summary>
            <param name="uploadedFile">file to upload</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatStageController.Import(System.Collections.Generic.List{eFMS.API.System.DL.Models.CatStageImportModel})">
            <summary>
            import list of stages
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatStageController.DownloadExcel">
            <summary>
            download a file excel from server
            </summary>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.CatUnitController">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatUnitController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.System.DL.Common.LanguageSub},eFMS.API.System.DL.IService.ICatUnitService)">
            <summary>
            constructor
            </summary>
            <param name="localizer">inject IStringLocalizer service</param>
            <param name="service">inject ICatUnitService service</param>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatUnitController.Get">
            <summary>
            get all units
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatUnitController.GetUnitTypes">
            <summary>
            get all unit types
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatUnitController.Get(eFMS.API.System.DL.Models.Criteria.CatUnitCriteria)">
            <summary>
            get the list of units
            </summary>
            <param name="criteria">search conditions</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatUnitController.Get(eFMS.API.System.DL.Models.Criteria.CatUnitCriteria,System.Int32,System.Int32)">
            <summary>
            get and paging the list of units by conditions
            </summary>
            <param name="criteria">search conditions</param>
            <param name="page">page to retrieve data</param>
            <param name="size">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatUnitController.Get(System.Int32)">
            <summary>
            get unit by id
            </summary>
            <param name="id">id of data that need to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatUnitController.Post(eFMS.API.System.DL.Models.CatUnitModel)">
            <summary>
            add new unit
            </summary>
            <param name="model">object to delete</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatUnitController.Put(eFMS.API.System.DL.Models.CatUnitModel)">
            <summary>
            update an existed item
            </summary>
            <param name="model">object to update</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatUnitController.Delete(System.Int16)">
            <summary>
            delete an existed item
            </summary>
            <param name="id">id of data that want to delete</param>
            <returns></returns>
        </member>
    </members>
</doc>
